https://github.com/okovtun/PD_011.git
https://www.youtube.com/watch?v=OG8eJ5vgXns&list=PLeqyOOqxeiIPInTeBnDUO6ik4Q7bRp2cR&index=1&t=3839s

Book:
https://drive.google.com/drive/folders/1wxr2q93yKD3AHFgI5YO_IfLa8rX6gtAc?usp=sharing

TODO:
В класс ForwardList добавить:
1. метод erase(), который удаляет элемент по индексу;
2. Написать деструктор, чтобы он очищал список перед удалением;
3. Добавить CopyMethods;

DONE:
В класс ForwardList добавить метод void push_back(int Data), который добавляет элемент в конец списка.

DONE:
Создать ветку distributed_academy, и в ней вынести классы в отдельные файлы;

DONE:
В проект Academy добавить класс Graduate (Дипломник).

DONE:
Разделить на файлы класс Fraction, в ветке fraction_separated.

TODO:
Реализовать класс Binary, описывающий двоичное число. 
Обеспечить арифметические операции: +, -, *, /;
и побитовые операции: ! - NOT, | - OR, & - AND, ^ - XOR;
над двоичными числами.

DONE:
1. В классе String реализовать оператор [], и использовать его в операторе +;
2. Оптимизировать оператор + используя стардартные функции C++:
	http://cplusplus.com/reference/cstring/
3. В классе String реализовать MoveMethods:
	http://cplusplus.com/doc/tutorial/classes2/

DONE:
Реализовать класс Fraction, описывающий простую дробь. 
В классе должны быть:
1. все обязательные методы;		DONE
2. методы:
	-to_proper();	//Переводит неправильную дробь в правильную 11/4 => 2(3/4)	DONE
	-to_improper();	//Переводит дробь в неправильную	2(3/4) => 11/4			DONE
	-reduce();		//Сокращает дробь		5/10 => 1/2							DONE
	https://www.webmath.ru/poleznoe/formules_12_7.php
2. арифметические операции над дробями: +, -, *, /;		DONE
3. составные присваивания: +=, -=, *=, /=;				DONE
4. Increment/Decrement (++/--);							DONE
5. операторы сравнения: ==, !=, >, <, >=, <=;			TODO:Перегрузить оставшиеся операторы сравнения
6. написать оператор преобразования в double;			DONE
7. обеспечить возможность инициализации объектов значениями типа double;DONE

DONE:
0. Выучить теорию!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
1. Для класса Point перегрузить опервторы +, -, *, /, которые будут выполнять 
   соответсвующие операции над соответствующими координатами, например
   оператор + будет суммировать координаты по 'x' и по 'y', и возвращать точку с суммированными координатами.


DONE:
Оптимизировать метод и функцию distance до одной строки кода.	DONE
1. В классе Point реализовать МЕТОД ??? distance(???), который возвращает расстояние до УКАЗАННОЙ точки;DONE
2. Реализовать функцию ??? distance(???), которая возвращает расстояние между двумя точками;			DONE